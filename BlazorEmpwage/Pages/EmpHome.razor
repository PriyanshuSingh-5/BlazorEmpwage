@page "/emphome"
@using BlazorEmpwage.Data


@inject EmpService employeeServices
@*@inject IHttpClientFactory ClientFactory*@
<h3>EmpHome</h3>
<h1>Employee Data</h1>
<p>This component demonstrates fetching Employee data from the server.</p>
<p>
    <a href="/empwage">Create New</a>
</p>

@if (Employee == null)
{
                <p><em>Loading...</em></p>
}
else
{

<table class='table'>
    <thead>
        <tr>
            
            <th>Name</th>
            <th>Gender</th>
            <th>Department</th>
            <th>Notes</th>
        </tr>
    </thead>
    <tbody>
    
    @foreach (var emp in Employee)
    {
        <tr>
            
            <td>@emp.Name</td>
            <td>@emp.Gender</td>
            <td>@emp.Department</td>
            <td>@emp.Notes</td>
        </tr>
    }
    </tbody>
</table>
}


@functions {
    public Employee Emp = new Employee();
    public  List<Employee> Employee;

    protected override void OnInitialized()
    {
        Employee = employeeServices.GetEmployeesList();
    }
    public async Task OnInitAsync()
    {
        //await httpClient.GetAsync("/api/Employee/Index");
        //httpClient.GetAsync(HttpMethod.Get, "/api/Employee/Index")
        // var request = new HttpRequestMessage(HttpMethod.Get,
        // "/api/Employee/Index");



    }
    //public async Task<string> GetResponseString()
    //{
    //    var request = "/api/Employee/Index";
    //    var response = await httpClient.GetAsync(request);
    //    var content = await response.Content.ReadAsStringAsync();
    //    return content;
    //}
}